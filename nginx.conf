events {}

http {
    # Reduce log verbosity
    error_log /var/log/nginx/error.log warn;
    access_log /var/log/nginx/access.log;

    server {
        listen 80;

        location /api/ {
            proxy_pass http://backend:4000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

		location /socket.io/ {
            #proxy_pass http://backend:4000;
            proxy_pass http://backend:4001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location / {
            proxy_pass http://frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
} 

# events {}

# http {
#     error_log /var/log/nginx/error.log warn;
#     access_log /var/log/nginx/access.log;

#     server {
#         listen 80;

#         # Redireciona chamadas de API para o backend
#         location /api/ {
#             proxy_pass http://backend:4000/;  # ← precisa da barra final
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection 'upgrade';
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_cache_bypass $http_upgrade;
#         }

#         # Redireciona tudo mais para o frontend (Vite dev server ou build)
#         location / {
#             proxy_pass http://frontend:3000/;  # ← também precisa da barra final
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection 'upgrade';
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_cache_bypass $http_upgrade;
#         }
#     }
# }
